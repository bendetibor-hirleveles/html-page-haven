name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: üîΩ Repo kl√≥noz√°sa
        uses: actions/checkout@v4

      - name: üü¢ Node.js k√∂rnyezet be√°ll√≠t√°sa
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: üì¶ F√ºgg≈ës√©gek telep√≠t√©se
        run: npm install

      - name: üõ† React app buildel√©se
        run: npm run build

      - name: üìÅ F√°jlok el≈ëk√©sz√≠t√©se felt√∂lt√©shez
        run: |
          rm -rf deploy_upload
          mkdir deploy_upload

          # React build eredm√©nye
          cp -rv dist/* deploy_upload/

          # Gy√∂k√©r HTML f√°jlok
          find . -maxdepth 1 -name "*.html" -exec cp -v {} deploy_upload/ \;

          # Teljes mapp√°k
          mkdir -p deploy_upload/assets
          cp -rv assets/* deploy_upload/assets/ || echo "‚ö†Ô∏è assets mappa nem l√©tezik vagy √ºres"

          cp -rv blog deploy_upload/blog || echo "‚ö†Ô∏è blog nem tal√°lhat√≥ vagy √ºres"
          cp -rv supabase deploy_upload/supabase || echo "‚ö†Ô∏è supabase nem tal√°lhat√≥ vagy √ºres"
          cp -rv public deploy_upload/public || echo "‚ö†Ô∏è public nem tal√°lhat√≥ vagy √ºres"
          cp -rv src deploy_upload/src || echo "‚ö†Ô∏è src nem tal√°lhat√≥ vagy √ºres"

          # .htaccess is kellhet a routinghoz
          cp -v .htaccess deploy_upload/.htaccess || echo "‚ö†Ô∏è .htaccess nem tal√°lhat√≥"

          echo "‚úÖ deploy_upload tartalma:"
          find deploy_upload -type f

      - name: üöÄ F√°jlok felt√∂lt√©se FTP-n (passz√≠v m√≥d)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: deploy_upload/
          server-dir: /public_html/
          include-dotfiles: true
          dangerous-clean-slate: false
          delete: false
          passive: true

