name: Build and Deploy to FTP

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm ci

      - name: Build the app (React + Vite)
        run: npm run build

      - name: Prepare upload folder (clean and copy)
        run: |
          rm -rf deploy_upload
          mkdir -p deploy_upload

          # Másoljuk a buildelt dist fájlokat
          cp -rv dist/* deploy_upload/

          # Másoljuk az asseteket
          mkdir -p deploy_upload/assets
          cp -rv assets/* deploy_upload/assets/ || echo "No assets"

          # Blog fájlok
          mkdir -p deploy_upload/blog
          cp -rv blog/* deploy_upload/blog/ || echo "No blog files"

          # Supabase (ha kell runtime-hoz)
          mkdir -p deploy_upload/supabase
          cp -rv supabase/* deploy_upload/supabase/ || echo "No supabase files"

          # Public tartalom (ha van)
          mkdir -p deploy_upload/public
          cp -rv public/* deploy_upload/public/ || echo "No public files"

          # Gyökér .html fájlok (statikus oldalak)
          find . -maxdepth 1 -name "*.html" -exec cp -v {} deploy_upload/ \;

          # .htaccess is kell a SPA működéshez
          cp -v .htaccess deploy_upload/.htaccess || echo ".htaccess missing"

      - name: Deploy via FTP (passive mode)
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: deploy_upload/
          server-dir: /public_html/
          dry-run: false
          dangerous-clean-slate: false
          delete: false
          include-dotfiles: true
